<?xml version="1.0" encoding="UTF-8" ?>

<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">

    <!-- Banco de dados em uso: cursos_alura -->
    <!-- Uma persistence-unit representa uma unidade de persistência, basicamente um banco de dados. -->
    <persistence-unit name="curso_alura" transaction-type="RESOURCE_LOCAL">

        <!-- Propriedades de cursos_alura -->
        <properties>

            <!-- Propriedades básicas do banco de dados: -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost/curso_alura"/>
            <property name="javax.persistence.jdbc.user" value="admin"/>
            <property name="javax.persistence.jdbc.password" value="admin"/>

            <!-- Propriedades de configuração do Hibernate:-->

            <!-- Classe que representa o Dialeto do banco de dados escolhido:  -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect"/>

            <!-- Mostrar as queries SQL no log/console-->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>

            <!-- Auto gerenciamento dos schemas do banco (usar apenas em estudos) -->
            <!--
                valores possíveis:
                     create -> Ao instanciar o EntityManagerFactory, o hibernate verifica o schema e cria as tabelas;
                     create-drop -> Ao finalizar a execução, automaticamente os dados são dropados;
                     update -> Atualização automática (verifica alterações no código Java e altera no banco de dados), porém não apaga nada;
                     validate -> Não altera nada no banco, apenas verifica e lança no log se tiver inconsistências;
             -->
            <property name="hibernate.hbm2ddl.auto" value="create-drop"/>

        </properties>

    </persistence-unit>

</persistence>